name: Generate Resume PDF

on:
  workflow_run:
    workflows: ["pages-build-deployment"]
    types:
      - completed
  # push:
  #   branches: [master]
    # Avoid triggering on changes to data.yml to prevent loops
    # paths-ignore:
    #   - '_data/data.yml'
    #   - 'assets/files/*'
  workflow_dispatch:

jobs:
  generate_and_update_pdf:
    runs-on: ubuntu-latest
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      REPO_URL: https://radugalbenu.github.io
      # Set the line number for the pdf: field in _data/data.yml.
      # If you change the structure of data.yml, update this value accordingly.
      PDF_LINE_NUMBER: 14

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10' 
          packages: 'ruamel.yaml'
      - name: Get short commit SHA
        id: vars
        run: echo "sha_short=$(echo $GITHUB_SHA | cut -c1-7)" >> $GITHUB_OUTPUT

      # - name: Wait for the site to be built
      #   run: |
      #     echo "Waiting for the site to be built..."
      #     sleep 60  # Adjust the sleep time as necessary

      - name: Generate PDF from resume page
        uses: misaelnieto/web_to_pdf_action@master
        with:
          webPageURL: ${{ env.REPO_URL }}/print
          outputFile: ./assets/files/my_cv_${{ steps.vars.outputs.sha_short }}.pdf
          usePuppeteer: true
          pdfOptions: '{"format": "Letter", "margin": {"top": "10mm", "left": "10mm", "right": "10mm", "bottom": "10mm"}}'

      - name: Update data.yml with new PDF link
        run: |
          PDF_LINK="${REPO_URL}/assets/files/my_cv_${{ steps.vars.outputs.sha_short }}.pdf"
          python3 <<EOF
          from ruamel.yaml import YAML
          yaml = YAML()
          yaml.preserve_quotes = True
          path = "_data/data.yml"
          with open(path, "r") as f:
              data = yaml.load(f)
          data['sidebar']['pdf'] = PDF_LINK
          with open(path, "w") as f:
              yaml.dump(data, f)
          EOF

      - name: Commit and push changes
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add _data/data.yml assets/files/
          git diff --cached --quiet && echo "No changes to commit" && exit 0
          git commit -m "Update PDF resume and link in data.yml (PDF for commit ${{ steps.vars.outputs.sha_short }})"
          git pull --rebase origin master 
          git push